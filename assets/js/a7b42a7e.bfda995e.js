"use strict";(self.webpackChunkcode_fictionist=self.webpackChunkcode_fictionist||[]).push([[6037],{71290:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>o,contentTitle:()=>s,default:()=>h,frontMatter:()=>i,metadata:()=>a,toc:()=>l});var r=t(85893),c=t(11151);const i={title:"Vue3 - \u5c08\u6848\u5efa\u7acb\u8207\u97ff\u61c9\u5f0f\u8cc7\u6599",tags:["vue3"]},s=void 0,a={id:"tech_articles/framework/Vue/reactive",title:"Vue3 - \u5c08\u6848\u5efa\u7acb\u8207\u97ff\u61c9\u5f0f\u8cc7\u6599",description:"Create a Vue3 project",source:"@site/docs/tech_articles/03-framework/02-Vue/01-reactive.mdx",sourceDirName:"tech_articles/03-framework/02-Vue",slug:"/tech_articles/framework/Vue/reactive",permalink:"/docs/tech_articles/framework/Vue/reactive",draft:!1,unlisted:!1,tags:[{inline:!0,label:"vue3",permalink:"/docs/tags/vue-3"}],version:"current",sidebarPosition:1,frontMatter:{title:"Vue3 - \u5c08\u6848\u5efa\u7acb\u8207\u97ff\u61c9\u5f0f\u8cc7\u6599",tags:["vue3"]},sidebar:"programSidebar",previous:{title:"\u5b98\u65b9\u6559\u5b78 - \u932f\u8aa4\u8655\u7406",permalink:"/docs/tech_articles/framework/React/Next/next-error-handle"},next:{title:"Vue3 - \u5143\u4ef6\u8207\u8cc7\u6599\u50b3\u905e",permalink:"/docs/tech_articles/framework/Vue/vue-data-transfer"}},o={},l=[{value:"Create a Vue3 project",id:"create-a-vue3-project",level:2},{value:"Syntax",id:"syntax",level:2},{value:"Text Interpolation",id:"text-interpolation",level:3},{value:"Raw HTML",id:"raw-html",level:3},{value:"Attribute Bindings",id:"attribute-bindings",level:3},{value:"Reactivity Fundamentals",id:"reactivity-fundamentals",level:2},{value:"ref",id:"ref",level:3},{value:"reactive",id:"reactive",level:3},{value:"Difference between <code>ref</code> and <code>reactive</code>",id:"difference-between-ref-and-reactive",level:3},{value:"computed",id:"computed",level:3},{value:"Difference between method and computed",id:"difference-between-method-and-computed",level:3},{value:"Reference",id:"reference",level:2}];function d(e){const n={a:"a",admonition:"admonition",br:"br",code:"code",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",...(0,c.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h2,{id:"create-a-vue3-project",children:"Create a Vue3 project"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:"Run the code below in the terminal:"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-powershell",children:"npm create vue@latest\n"})}),"\n",(0,r.jsxs)(n.ol,{start:"2",children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"cd"})," into the project path, run the instruction below:"]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-powershell",children:"npm install\n"})}),"\n",(0,r.jsxs)(n.ol,{start:"3",children:["\n",(0,r.jsxs)(n.li,{children:["Type ",(0,r.jsx)(n.code,{children:"npm run dev"}),", you can now see the vue3 website run on the browser."]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"syntax",children:"Syntax"}),"\n",(0,r.jsx)(n.p,{children:"Vue3 has the powerful syntax - composition api, it's very different with the options api of Vue2, but you still can write options api in Vue3 (not recommend)."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-xml",metastring:"title='composition api'",children:"<script setup>\n  \x3c!-- put all your methods and variables here --\x3e\n<\/script>\n\n<template>\n  \x3c!-- the HTML structure --\x3e\n</template>\n\n<style scoped>\n \x3c!-- css style, use `scope` let the css command only work in this component \u200b --\x3e\n</style>\n"})}),"\n",(0,r.jsx)(n.h3,{id:"text-interpolation",children:"Text Interpolation"}),"\n",(0,r.jsxs)(n.p,{children:["In the template, if there have a variable you want to render, use ",(0,r.jsx)(n.code,{children:"{{...}}"}),", like below:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-xml",children:"<span>Message: {{ msg }}</span>\n"})}),"\n",(0,r.jsx)(n.h3,{id:"raw-html",children:"Raw HTML"}),"\n",(0,r.jsxs)(n.p,{children:["If your variable contains HTML content, you should not use ",(0,r.jsx)(n.code,{children:"{{...}}"})," since it will treat the variable's content as plain text.",(0,r.jsx)(n.br,{}),"\n","Instead, you should use the ",(0,r.jsx)(n.code,{children:"v-html"})," directive to insert HTML content\uff1a"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-xml",children:'\x3c!-- rawHtml = <span style="color: red">This should be red.</span> --\x3e\n<p>Using v-html directive: <span v-html="rawHtml"></span></p>\n'})}),"\n",(0,r.jsx)(n.h3,{id:"attribute-bindings",children:"Attribute Bindings"}),"\n",(0,r.jsxs)(n.p,{children:["If you want to binding a variable on the attribute, use ",(0,r.jsx)(n.code,{children:"v-bind"}),". For example:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-xml",children:'<h1 v-bind:class="{addColor: changed}">I will change my color</h1>\n'})}),"\n",(0,r.jsxs)(n.p,{children:["Here means: when changed is ",(0,r.jsx)(n.code,{children:"true"}),", this ",(0,r.jsx)(n.code,{children:"<h1>"})," will add a class name ",(0,r.jsx)(n.code,{children:"addColor"}),".",(0,r.jsx)(n.br,{}),"\n","You can use a shorthand for ",(0,r.jsx)(n.code,{children:"v-bind"})," as shown below:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-xml",children:'<h1 :class="{addColor: changed}">I will change my color</h1>\n'})}),"\n",(0,r.jsxs)(n.admonition,{type:"info",children:[(0,r.jsx)(n.p,{children:"There are many directives in Vue. For example:"}),(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"v-for"}),":  This is a loop used to create multiple elements."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"v-if"})," or ",(0,r.jsx)(n.code,{children:"v-show"}),": These are used to conditionally display elements."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"v-on"}),":  This is used to bind an event handler."]}),"\n"]})]}),"\n",(0,r.jsx)(n.h2,{id:"reactivity-fundamentals",children:"Reactivity Fundamentals"}),"\n",(0,r.jsxs)(n.p,{children:["Reactivity is a crucial concept in Vue.",(0,r.jsx)(n.br,{}),"\n","We use ",(0,r.jsx)(n.code,{children:"useState"})," to manage reactive data in React. However, in Vue3, it use ",(0,r.jsx)(n.code,{children:"ref"}),", ",(0,r.jsx)(n.code,{children:"reactive"})," and ",(0,r.jsx)(n.code,{children:"computed"})," for this purpose."]}),"\n",(0,r.jsx)(n.h3,{id:"ref",children:"ref"}),"\n",(0,r.jsxs)(n.p,{children:["It can store any type of data.",(0,r.jsx)(n.br,{}),"\n","However, when storing objects or arrays that require reactive properties, reactive is often preferred."]}),"\n",(0,r.jsxs)(n.p,{children:["Note that when accessing the value of a ref in ",(0,r.jsx)(n.code,{children:"<script setup>"}),", you should append .value to it.",(0,r.jsx)(n.br,{}),"\n","However, in ",(0,r.jsx)(n.code,{children:"<template>"}),", you can directly use ",(0,r.jsx)(n.code,{children:"{{ref}}"})," to access the value without .value."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-xml",children:'<script setup>\n  import { ref } from \'vue\';\n  const num = ref(0)\n  const changeNum = () => num.value += 1\n<\/script>\n\n<template>\n  <h1>{{ num }}</h1>\n  {/* these two lines of code do the same thing */}\n  <button @click="changeNum">Add one</button>\n  <button @click="num++">Add one</button>\n</template>\n'})}),"\n",(0,r.jsx)(n.admonition,{type:"warning",children:(0,r.jsxs)(n.p,{children:["Please use ",(0,r.jsx)(n.code,{children:"const"})," to declare a ",(0,r.jsx)(n.code,{children:"ref"}),". Do not use ",(0,r.jsx)(n.code,{children:"let"})," or ",(0,r.jsx)(n.code,{children:"var"}),"!"]})}),"\n",(0,r.jsx)(n.h3,{id:"reactive",children:"reactive"}),"\n",(0,r.jsxs)(n.p,{children:["When accessing properties of a reactive object, unlike with ",(0,r.jsx)(n.code,{children:"ref"}),", there's no need to append ",(0,r.jsx)(n.code,{children:".value"}),"."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-xml",children:"<script setup>\n  import { reactive } from 'vue';\n  const people2 = reactive({\n    name: 'Jeremy',\n    gender: 'Male',\n    age: 20\n  })\n\n  const changePeople2 = () => {\n    people2.name = 'Lucy'\n    console.log('people2 changed')\n  }\n<\/script>\n\n<template>\n  <h1>{{ people2.name }} / {{ people2.gender }}</h1>\n  <button @click=\"changePeople2\">Change!</button>\n</template>\n"})}),"\n",(0,r.jsxs)(n.admonition,{type:"info",children:[(0,r.jsxs)(n.h3,{id:"difference-between-ref-and-reactive",children:["Difference between ",(0,r.jsx)(n.code,{children:"ref"})," and ",(0,r.jsx)(n.code,{children:"reactive"})]}),(0,r.jsxs)(n.p,{children:["Not just if you need to append ",(0,r.jsx)(n.code,{children:".value"})," or not.",(0,r.jsx)(n.br,{}),"\n","When a ",(0,r.jsx)(n.code,{children:"ref"})," is used to store an object, deep changes within the object's properties might not be detected by ",(0,r.jsx)(n.code,{children:"watch"}),", as ref is primarily designed to track direct assignments to its value.",(0,r.jsx)(n.br,{}),"\n","In contrast, an object made reactive with ",(0,r.jsx)(n.code,{children:"reactive"})," can more effectively track changes to its internal properties."]}),(0,r.jsxs)(n.p,{children:["But, if you add the third parameter ",(0,r.jsx)(n.code,{children:"deep: true"})," when using ",(0,r.jsx)(n.code,{children:"watch"})," to observe a ",(0,r.jsx)(n.code,{children:"ref"})," object, ",(0,r.jsx)(n.code,{children:"watch"})," will be able to detect changes within the properties of the ",(0,r.jsx)(n.code,{children:"ref"})," object. This is because adding ",(0,r.jsx)(n.code,{children:"deep: true"})," enables ",(0,r.jsx)(n.code,{children:"watch"})," to perform deep observation."]}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-xml",children:"watch(people1, () => {\n  console.log('something changed')\n}, {deep : true})\n"})})]}),"\n",(0,r.jsx)(n.h3,{id:"computed",children:"computed"}),"\n",(0,r.jsxs)(n.p,{children:["In Vue, ",(0,r.jsx)(n.code,{children:"computed"})," is a method used to define reactive properties that can be computed.",(0,r.jsx)(n.br,{}),"\n","Computed properties automatically recalculate their value when the data they depend on changes.",(0,r.jsx)(n.br,{}),"\n","This is particularly useful for complex logic that needs to update automatically based on certain data."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-xml",metastring:"title='Before use computed'",children:"<script setup>\n  import { ref } from 'vue';\n  const num1 = ref(1)\n  const num2 = ref(2)\n<\/script>\n\n<template>\n  <h1>Num1: {{ num1 }}</h1>\n  <h1>Num2: {{ num2 }}</h1>\n  <h1>Num1 + Num2 = {{ num1 + num2 }}</h1>\n</template>\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-xml",metastring:"title='After use computed'",children:"<script setup>\n  import { ref, computed } from 'vue';\n  const num1 = ref(1)\n  const num2 = ref(2)\n\n  const numPlus = computed(()=>{\n    return num1.value  + num2.value\n  })\n<\/script>\n\n<template>\n  <h1>Num1: {{ num1 }}</h1>\n  <h1>Num2: {{ num2 }}</h1>\n  <h1>Num1 + Num2 = {{ numPlus }}</h1>\n</template>\n"})}),"\n",(0,r.jsxs)(n.p,{children:["You can see after we use ",(0,r.jsx)(n.code,{children:"computed"}),", we put all the logic into ",(0,r.jsx)(n.code,{children:"<script setup>"}),"."]}),"\n",(0,r.jsxs)(n.admonition,{type:"info",children:[(0,r.jsx)(n.h3,{id:"difference-between-method-and-computed",children:"Difference between method and computed"}),(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"computed"})," only works when the reactive data changes."]}),"\n",(0,r.jsxs)(n.li,{children:["You cannot pass any parameters to ",(0,r.jsx)(n.code,{children:"computed"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:["By default, ",(0,r.jsx)(n.code,{children:"computed"})," only has a ",(0,r.jsx)(n.code,{children:"getter"}),"."]}),"\n"]})]}),"\n",(0,r.jsx)(n.h2,{id:"reference",children:"Reference"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://cn.vuejs.org/guide/quick-start.html",children:"Vue.js"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://www.youtube.com/watch?v=rNQIA0Fe9KQ",children:"Vue3 + Vite \u5feb\u901f\u4e0a\u624b Get Startrd EP1 - \u521d\u63a2 Vite \u5c08\u6848 / Vue3 \u521d\u5b78\u8005\u61c9\u8a72\u8981\u5148\u77e5\u9053\u7684\u6771\u897f / \u525b\u958b\u59cb\u5beb Composition API \u6703\u72af\u7684\u932f\u8aa4 !"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://www.youtube.com/watch?v=gJF5Cf2fz1A",children:"Vue3 + Vite \u5feb\u901f\u4e0a\u624b Get Startrd EP2 - \u5b9a\u7fa9\u8cc7\u6599 ref\u3001reactive\u3001computed \u6df1\u5ea6\u63a2\u8a0e"})}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,c.a)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},11151:(e,n,t)=>{t.d(n,{Z:()=>a,a:()=>s});var r=t(67294);const c={},i=r.createContext(c);function s(e){const n=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(c):e.components||c:s(e.components),r.createElement(i.Provider,{value:n},e.children)}}}]);